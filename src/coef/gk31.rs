use crate::QuadGKCoef;

/// Shortcut to the nodes and weights of 31st order Gauss Kronrod quadrature rule.
pub struct GK31;

impl QuadGKCoef<31> for GK31 {
    fn quad_gk_coef(&self) -> [(f64, f64, Option<f64>); 31] {
        [
            (
                -0.9980022986933970602851728401522712,
                0.0053774798729233489877920514301276,
                None,
            ),
            (
                -0.9879925180204854284895657185866126,
                0.0150079473293161225383747630758073,
                Some(0.030753241996117268354628393577204),
            ),
            (
                -0.9677390756791391342573479787843372,
                0.0254608473267153201868740010196534,
                None,
            ),
            (
                -0.9372733924007059043077589477102095,
                0.03534636079137584622203794847836,
                Some(0.07036604748810812470926741645066734),
            ),
            (
                -0.8972645323440819008825096564544959,
                0.0445897513247648766082272993732797,
                None,
            ),
            (
                -0.8482065834104272162006483207742169,
                0.0534815246909280872653431472394303,
                Some(0.1071592204671719350118695466858693),
            ),
            (
                -0.7904185014424659329676492948179474,
                0.0620095678006706402851392309608029,
                None,
            ),
            (
                -0.724417731360170047416186054613938,
                0.0698541213187282587095200770991475,
                Some(0.139570677926154314447804794511028),
            ),
            (
                -0.6509967412974169705337358953132747,
                0.076849680757720378894432777482659,
                None,
            ),
            (
                -0.5709721726085388475372267372539106,
                0.0830805028231330210382892472861038,
                Some(0.1662692058169939335532008604812088),
            ),
            (
                -0.485081863640239680693655740232351,
                0.0885644430562117706472754436937743,
                None,
            ),
            (
                -0.3941513470775633698972073709810455,
                0.0931265981708253212254868727473457,
                Some(0.1861610000155622110268005618664228),
            ),
            (
                -0.299180007153168812166780024266389,
                0.09664272698362367850517990762758934,
                None,
            ),
            (
                -0.201194093997434522300628303394596,
                0.099173598721791959332393173484603,
                Some(0.1984314853271115764561183264438393),
            ),
            (
                -0.1011420669187174990270742314473923,
                0.10076984552387559504494666261757,
                None,
            ),
            (
                0.0,
                0.1013300070147915490173747927674926,
                Some(0.2025782419255612728806201999675193),
            ),
            (
                0.1011420669187174990270742314473923,
                0.1007698455238755950449466626175697,
                None,
            ),
            (
                0.2011940939974345223006283033945962,
                0.099173598721791959332393173484603,
                Some(0.1984314853271115764561183264438393),
            ),
            (
                0.299180007153168812166780024266389,
                0.096642726983623678505179907627589,
                None,
            ),
            (
                0.3941513470775633698972073709810455,
                0.0931265981708253212254868727473457,
                Some(0.1861610000155622110268005618664228),
            ),
            (
                0.485081863640239680693655740232351,
                0.0885644430562117706472754436937743,
                None,
            ),
            (
                0.5709721726085388475372267372539106,
                0.0830805028231330210382892472861038,
                Some(0.1662692058169939335532008604812088),
            ),
            (
                0.6509967412974169705337358953132747,
                0.076849680757720378894432777482659,
                None,
            ),
            (
                0.724417731360170047416186054613938,
                0.069854121318728258709520077099147,
                Some(0.1395706779261543144478047945110283),
            ),
            (
                0.7904185014424659329676492948179474,
                0.06200956780067064028513923096080293,
                None,
            ),
            (
                0.8482065834104272162006483207742169,
                0.0534815246909280872653431472394303,
                Some(0.1071592204671719350118695466858693),
            ),
            (
                0.8972645323440819008825096564544959,
                0.04458975132476487660822729937327969,
                None,
            ),
            (
                0.9372733924007059043077589477102095,
                0.03534636079137584622203794847836,
                Some(0.0703660474881081247092674164506673),
            ),
            (
                0.9677390756791391342573479787843372,
                0.0254608473267153201868740010196534,
                None,
            ),
            (
                0.9879925180204854284895657185866126,
                0.0150079473293161225383747630758073,
                Some(0.0307532419961172683546283935772044),
            ),
            (
                0.9980022986933970602851728401522712,
                0.00537747987292334898779205143012765,
                None,
            ),
        ]
    }
}
